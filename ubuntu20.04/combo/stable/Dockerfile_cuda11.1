FROM nvidia/cuda:11.1-cudnn8-devel-ubuntu20.04 as cuda11.1

MAINTAINER IceCube <developers@icecube.wisc.edu>

WORKDIR /root

# upgrade and install system packages (cuda image is a bit out of date)
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y \
  tar wget rsync gzip bzip2 xz-utils liblzma5 liblzma-dev zlib1g zlib1g-dev \
  less build-essential cmake libbz2-dev libzstd-dev \
  libxml2-dev subversion git libboost-python1.71-dev \
  libboost-system1.71-dev libboost-thread1.71-dev libboost-numpy1.71-dev \
  libboost-date-time1.71-dev libboost-serialization1.71-dev \
  libboost-filesystem1.71-dev libboost-program-options1.71-dev \
  libboost-regex1.71-dev libboost-iostreams1.71-dev libgsl0-dev \
  libcdk5-dev libarchive-dev python3-scipy \
  python3-urwid python3-numpy python3-matplotlib \
  python3-numexpr cython3 python3-cffi python3-requests \
  python3-healpy python3-urllib3 python3-jsonschema \
  python3-zmq python3-pymysql python3-yaml python3-pandas \
  python3-dev python3-pip python-is-python3 \
  zlib1g-dev liberfa-dev libstarlink-pal-dev \
  libopenblas-dev libsprng2-dev \
  libsuitesparse-dev libfftw3-dev \
  libcfitsio-dev libhdf5-dev libhealpix-cxx-dev \
  opencl-headers opencl-c-headers opencl-clhpp-headers \
  opencl-dev pocl-opencl-icd \
  libzmq5 libzmq3-dev libzmqpp-dev libzmqpp4 \
  nano vim sudo man-db lsb-release \
  && apt-get clean

RUN wget https://github.com/zeromq/cppzmq/archive/master.tar.gz && \
    tar -zxf master.tar.gz && cd cppzmq-master && \
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr . && make install

RUN mkdir -p /etc/OpenCL/vendors && echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

# stage in icetray
COPY --from=icecube/icetray:combo-stable-install /usr/local/icetray /usr/local/icetray
COPY --from=icecube/icetray:combo-stable-install /opt/i3-data /opt/i3-data

# set environment variables
ENV I3_DATA /opt/i3-data
ENV I3_TESTDATA /opt/i3-data/i3-test-data
ENV TMPDIR /scratch

# build the matplotlib font cache (prevents warnings about the font cache on startup)
RUN python3 -c 'from matplotlib import pyplot'

# create the scratch directory
RUN mkdir -p /scratch

# provide the entry point to run commands
ENTRYPOINT ["/bin/bash", "/usr/local/icetray/env-shell.sh", "exec"]
CMD ["/bin/bash"]
