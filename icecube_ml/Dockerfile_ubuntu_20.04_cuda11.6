ARG VERSION=current
FROM icecube/icetray:icetray-prod-${VERSION}-ubuntu20.04-X64 as icetray-build
FROM nvidia/cuda:11.6.2-cudnn8-devel-ubuntu20.04 as cuda11.6

MAINTAINER IceCube <developers@icecube.wisc.edu>

WORKDIR /root

# fix Nvidia signing keys
RUN apt-key del 7fa2af80 && \
    apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2004/x86_64/3bf863cc.pub

# upgrade and install system packages (cuda image is a bit out of date)
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get upgrade -y && \
  DEBIAN_FRONTEND=noninteractive apt-get install -y \
  tar wget curl rsync gzip bzip2 xz-utils liblzma5 liblzma-dev zlib1g zlib1g-dev \
  less build-essential cmake libbz2-dev libzstd-dev \
  libxml2-dev subversion git libboost-python1.71-dev \
  libboost-system1.71-dev libboost-thread1.71-dev libboost-numpy1.71-dev \
  libboost-date-time1.71-dev libboost-serialization1.71-dev \
  libboost-filesystem1.71-dev libboost-program-options1.71-dev \
  libboost-regex1.71-dev libboost-iostreams1.71-dev libgsl0-dev \
  libboost-chrono1.71.0 libboost-atomic1.71.0 \
  libcdk5-dev libarchive-dev python3-scipy ipython3 \
  python3-urwid python3-numpy python3-matplotlib \
  python3-numexpr cython3 python3-cffi python3-requests \
  python3-healpy python3-urllib3 python3-jsonschema \
  python3-zmq python3-pymysql python3-yaml python3-pandas \
  python3-dev python3-pip python-is-python3 \
  zlib1g-dev liberfa-dev libstarlink-pal-dev \
  libopenblas-dev libsprng2-dev \
  libsuitesparse-dev libfftw3-dev \
  libcfitsio-dev libhdf5-dev libhealpix-cxx-dev \
  opencl-headers opencl-c-headers opencl-clhpp-headers \
  opencl-dev pocl-opencl-icd \
  libzmq5 libzmq3-dev libzmqpp-dev libzmqpp4 \
  nano vim sudo man-db lsb-release ninja-build pkg-config doxygen\
  && apt-get clean

#install IceCube add ons (needs to be redone for cuda base)

RUN pip3 install 'setuptools>=59.5' sphinx breathe meson

RUN curl -L https://api.github.com/repos/zeromq/cppzmq/tarball/master -o master.tar.gz && \
    tar -zxf master.tar.gz && cd cppzmq-master && \
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local . && make install

# install photospline
RUN curl -L https://github.com/icecube/photospline/archive/refs/tags/v2.1.0.tar.gz | tar xz && \
  cd photospline-2.1.0 && cmake . -DCMAKE_INSTALL_PREFIX=/usr/local && make && make install

# build NuFlux
RUN curl -L https://github.com/icecube/nuflux/archive/refs/tags/v2.0.3.tar.gz | tar xz && \
    cd nuflux-2.0.3 && \
    meson build && \
    ninja -C build install && \
    pip install .

# build SQuIDS
RUN curl -L https://github.com/jsalvado/SQuIDS/archive/refs/tags/v1.3.0.tar.gz | tar xz && \
    cd SQuIDS-1.3.0 && ./configure --prefix=/usr/local && \
    make && make install

# build nuSQuIDS
RUN git clone https://github.com/arguelles/nuSQuIDS.git && \
    cd nuSQuIDS && ./configure --with-python-bindings --with-squids=/usr/local --prefix=/usr/local && \
    make && make python && make install && make python-install

# cleanup files that cause permission fixer issues (broken sim links.)
RUN rm /root/SQuIDS-1.3.0/test/SQuIDS /root/nuSQuIDS/test/nuSQuIDS

RUN mkdir -p /etc/OpenCL/vendors && echo "libnvidia-opencl.so.1" > /etc/OpenCL/vendors/nvidia.icd

# stage in icetray
COPY --from=icetray-build /usr/local/icetray /usr/local/icetray
COPY --from=icetray-build /usr/local/icetray_src /usr/local/icetray_src
COPY --from=icetray-build /opt/i3-data /opt/i3-data

# set environment variables
ENV LD_LIBRARY_PATH /usr/local/lib
ENV I3_DATA /opt/i3-data
ENV TMPDIR /scratch

# build the matplotlib font cache (prevents warnings about the font cache on startup)
RUN python3 -c 'from matplotlib import pyplot'

# create the scratch directory
RUN mkdir -p /scratch

# provide the entry point to run commands
ENTRYPOINT ["/bin/bash", "/usr/local/icetray/env-shell.sh", "exec"]
CMD ["/bin/bash"]
