#### Create a "developer" base

FROM ubuntu:22.04 as base-devel

MAINTAINER IceCube <developers@icecube.wisc.edu>

WORKDIR /root

# install system packages
RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
  tar wget curl rsync gzip bzip2 xz-utils liblzma5 liblzma-dev zlib1g zlib1g-dev \
  less build-essential cmake libbz2-dev libzstd-dev \
  libxml2-dev subversion git libboost-python1.74-dev \
  libboost-system1.74-dev libboost-thread1.74-dev libboost-numpy1.74-dev \
  libboost-date-time1.74-dev libboost-serialization1.74-dev \
  libboost-filesystem1.74-dev libboost-program-options1.74-dev \
  libboost-regex1.74-dev libboost-iostreams1.74-dev libgsl0-dev \
  libcdk5-dev libarchive-dev python3-scipy ipython3 \
  libboost-date-time-dev libboost-filesystem-dev libboost-iostreams-dev \
  libboost-numpy-dev libboost-program-options-dev libboost-python-dev \
  libboost-regex-dev libboost-serialization-dev libboost-system-dev libboost-thread-dev \
  python3-urwid python3-numpy python3-matplotlib liblapack-dev\
  python3-numexpr cython3 python3-cffi python3-requests \
  python3-healpy python3-urllib3 python3-jsonschema \
  python3-zmq python3-pymysql python3-yaml python3-pandas python3-seaborn \
  python3-dev python3-pip python-is-python3 python3-mysqldb \
  zlib1g-dev liberfa-dev libstarlink-pal-dev \
  libopenblas-dev libsprng2-dev python3-mysqldb \
  libsuitesparse-dev libfftw3-dev \
  libcfitsio-dev libhdf5-dev libhealpix-cxx-dev \
  opencl-headers opencl-c-headers opencl-clhpp-headers \
  opencl-dev pocl-opencl-icd \
  libzmq5 libzmq3-dev \
  nano vim sudo man-db lsb-release ninja-build pkg-config doxygen\
  && apt-get clean

#  zmqpp is needed, see hand-roll instructions:  https://github.com/zeromq/zmqpp
RUN curl -L https://github.com/zeromq/zmqpp/archive/refs/tags/4.2.0.tar.gz | tar xz && \
    cd zmqpp-4.2.0 && make && make install

RUN pip3 install 'setuptools>=59.5' sphinx breathe meson

RUN wget https://github.com/zeromq/cppzmq/archive/master.tar.gz && \
    tar -zxf master.tar.gz && cd cppzmq-master && \
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local . && make install

# install photospline
RUN curl -L https://github.com/icecube/photospline/archive/refs/tags/v2.1.0.tar.gz | tar xz && \
  cd photospline-2.1.0 && cmake . -DCMAKE_INSTALL_PREFIX=/usr/local && make && make install

# build NuFlux
RUN curl -L https://github.com/icecube/nuflux/archive/refs/tags/v2.0.3.tar.gz | tar xz && \
    cd nuflux-2.0.3 && \
    meson build && \
    ninja -C build install && \
    pip install .

# Clean up cached packages
RUN apt-get autoclean

# set environment variables
ENV LD_LIBRARY_PATH /usr/local/lib
# provide the entry point
CMD ["/bin/bash"]
