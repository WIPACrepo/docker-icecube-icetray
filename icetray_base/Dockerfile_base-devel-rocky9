#### Create a "developer" base for Rocky 9
# Why Rocky. NVIDIA uses Rocky 8 as the base image
# This is mostly meant as a image for grid computing

FROM rockylinux:9 as base-devel

MAINTAINER IceCube <developers@icecube.wisc.edu>

WORKDIR /root

RUN dnf install -y epel-release
RUN dnf install -y dnf-plugins-core

RUN dnf config-manager --enable -y crb
RUN dnf config-manager --enable -y epel
RUN dnf config-manager --enable -y extras

RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then dnf -y install http://repo.opensciencegrid.org/osg/3.6/osg-3.6-el9-release-latest.rpm; fi

# RUN dnf -y install http://repo.opensciencegrid.org/osg/3.6/osg-3.6-el9-release-latest.rpm

RUN dnf -y group install "Development Tools" "Scientific Support"

RUN dnf -y --allowerasing install \
           # astropy-tools \
           bc \
           binutils \
           binutils-devel \
           blas \
           blas-devel \
           boost \
           boost-date-time \
           boost-devel \
           boost-system \ 
           boost-thread \
           boost-filesystem \
           boost-program-options \
           boost-regex \
           boost-iostreams \
           boost-python3-devel \
           bzip2-devel \
           cfitsio \
           cfitsio-devel \
           cmake \
           cppzmq-devel \
           curl \
           davix-devel \
           dcap-devel \
           fontconfig \
           gcc \
           gcc-c++ \
           gcc-gfortran \
           git \
           glib2-devel \
           graphviz \
           gfal2 \ 
           gsl-devel \
           json-c-devel \
           hdf5 \
           lapack \
           lapack-devel \
           libaec-devel \
           libarchive \
           libattr-devel \
           libgfortran \
           libicu \
           libtool \
           libtool-ltdl \
           libtool-ltdl-devel \
           libuuid-devel \
           libxml2 \
           libxml2-devel \
           make \
           meson \
           ocl-icd \ 
           ocl-icd-devel \
           openssl \
           # osg-wn-client \
           p7zip \
           p7zip-plugins \
           # python3-astropy \
           python3-devel \
           # python3-numpy \
           # python3-matplotlib\
           # python3-scipy \
           # redhat-lsb \
           # redhat-lsb-core \
           srm-ifce-devel \
           # starlink-pal \
           # stashcache-client \
           suitesparse \
           wget \
           xrootd-client-devel \
           zlib-devel 

RUN pip3 install numpy scipy matplotlib astropy 'setuptools>=59.5' sphinx breathe 'meson>=1.2.0'

RUN if [ "$TARGETPLATFORM" = "linux/amd64" ]; then dnf -y install osg-wn-client stashcache-client condor libquadmath; fi && rm -f /etc/grid-security/certificates/*.r0

# RUN dnf -y install osg-wn-client stashcache-client condor libquadmath

RUN dnf clean all

RUN wget https://github.com/liberfa/erfa/releases/download/v2.0.0/erfa-2.0.0.tar.gz && \
    tar -xzf erfa-2.0.0.tar.gz && \
    cd erfa-2.0.0 && \
    ./configure && \
    make && \
    make install 

RUN wget https://github.com/Starlink/pal/releases/download/v0.9.8/pal-0.9.8.tar.gz && \
    tar -xzf pal-0.9.8.tar.gz && \
    cd pal-0.9.8 && \
    ./configure --without-starlink && \
    make && \
    make install

RUN curl -L https://api.github.com/repos/zeromq/cppzmq/tarball/master -o master.tar.gz && \
    tar -zxf master.tar.gz && \
    cd cppzmq-master && \
    cmake -DCMAKE_INSTALL_PREFIX:PATH=/usr/local . && \
    make install


# install photospline
RUN curl -L https://github.com/icecube/photospline/archive/refs/tags/v2.1.0.tar.gz | tar xz && \
  cd photospline-2.1.0 && cmake . -DCMAKE_INSTALL_PREFIX=/usr/ && make && make install


# RUN curl -L https://github.com/icecube/nuflux/archive/refs/tags/v2.0.3.tar.gz | tar xz && \
#     cd nuflux-2.0.3 && \
#     meson build && \
#     ninja -C build install && \
#     pip install .

# required directories
RUN for MNTPOINT in \
        /cvmfs \
    ; do \
        mkdir -p $MNTPOINT ; \
    done
